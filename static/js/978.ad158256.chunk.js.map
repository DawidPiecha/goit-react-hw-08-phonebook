{"version":3,"file":"static/js/978.ad158256.chunk.js","mappings":"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","sources":["redux/Contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterStatus = state => state.filter.status;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterStatus],\n  (contacts, filterStatus) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterStatus)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__form\":\"ContactForm_form__form__QUfmM\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/Contacts/operations';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport css from './ContactForm.module.css';\nimport { selectContacts } from '../../redux/Contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSumbit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const id = nanoid();\n\n    const isNameExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameExists) {\n      Notiflix.Notify.warning(`${name} already exists in contacts.`);\n      return;\n    }\n    dispatch(addContact({ id, name, number }));\n    form.reset();\n  };\n\n  return (\n    <div className={css.form}>\n      <form className={css.form__form} onSubmit={handleSumbit}>\n        <label className={css.form__label} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          className={css.form__input}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter name\"\n          autoComplete=\"name\"\n          required\n        />{' '}\n        <label className={css.form__label} htmlFor=\"number\">\n          Number\n        </label>\n        <input\n          className={css.form__input}\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"[0-9\\s\\-]+\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter phone number\"\n          autoComplete=\"tel\"\n          required\n        />\n        <button className={css.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport { setFilterStatus } from '../../redux/Contacts/filterSlice'; // Poprawna ścieżka do pliku\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = event => {\n    dispatch(setFilterStatus(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        name=\"filterName\"\n        className={css.input}\n        type=\"text\"\n        placeholder=\"Search contacts...\"\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactList__item\":\"ContactList_contactList__item__2K2vx\",\"contactInfo\":\"ContactList_contactInfo__Sgq6p\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/Contacts/selectors';\nimport { deleteContact } from '../../redux/Contacts/operations';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={filteredContacts.length ? css.contactList : css.emptyList}>\n      {filteredContacts.map(contact => (\n        <li key={contact.id} className={css.contactList__item}>\n          <div className={css.contactInfo}>\n            <strong>{contact.name}:</strong>\n            <span className={css.contactNumber}>{contact.number}</span>\n          </div>\n          <button\n            type=\"button\"\n            className={css.deleteButton}\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContainer\":\"Contacts_phonebookContainer__Endym\",\"phonebookHeading\":\"Contacts_phonebookHeading__ZeLxi\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/Contacts/operations';\nimport { selectError, selectIsLoading } from '../../redux/Contacts/selectors';\n\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './Contacts.module.css';\nimport { selectIsLoggedIn } from '../../redux/Auth/selectors';\nimport { Navigate } from 'react-router-dom';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (!isLoggedIn) {\n    return <Navigate to=\"/login\" />;\n  }\n  return (\n    <HelmetProvider>\n      <div className={css.phonebookContainer}>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n        <h1 className={css.phonebookHeading}>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts: {isLoading && !error && <Loader />}</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","status","filterStatus","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_jsx","className","css","children","_jsxs","onSubmit","event","preventDefault","form","target","elements","value","number","id","nanoid","some","Notiflix","concat","addContact","reset","htmlFor","type","pattern","title","placeholder","autoComplete","required","Filter","onChange","setFilterStatus","ContactList","filteredContacts","length","map","onClick","deleteContact","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts","HelmetProvider","Helmet","Loader","Navigate","to"],"sourceRoot":""}